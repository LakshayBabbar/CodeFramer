datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String    @id @default(cuid())
  username      String?   @unique
  name          String
  email         String    @unique
  emailVerified DateTime?
  image         String?
  role          Role      @default(USER)
  accounts      Account[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  Project       Project[]
  Blogs         Blog[]
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  access_token      String?
  token_type        String?
  expires_at        Int?
  scope             String?
  id_token          String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Project {
  id        String      @id @default(cuid())
  name      String
  type      ProjectType
  user      User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  isPublic  Boolean     @default(false)
  languages Language[]
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt

  @@index([userId])
}

model Language {
  id        String   @id @default(cuid())
  name      String
  code      String?
  inputs    String?
  project   Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([projectId])
}

model Inquiries {
  id        String   @id @default(cuid())
  name      String
  email     String
  message   String
  closed    Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Blog {
  id          String   @id @default(cuid())
  title       String
  description String
  content     String
  thumbnail   String?
  tags        String[]
  featured    Boolean  @default(false)
  User        User     @relation(fields: [authorId], references: [id])
  authorId    String
  slug        String   @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum ProjectType {
  WEB
  COMPILER
}

enum Role {
  USER
  ADMIN
}
